
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>菜单管理</title>
    <link href="~/Content/CommonStyle.css" rel="stylesheet" />
    <script src="~/Scripts/Vue/vue.js"></script>
    <link href="~/Scripts/ElementUI/css/index.css" rel="stylesheet" />
    <script src="~/Scripts/ElementUI/index.js"></script>
    <script src="~/Scripts/Axios/axios.min.js"></script>
    <style>

        #App {
            height:100%;
        }
        #DivLeft {
            float: left;
            height: 100%;
            width:300px;
          
        }
        #DivRight {
            float: left;
            width: calc(100% - 300px);
            height:100%;
        }
        .el-tree--highlight-current .el-tree-node.is-current > .el-tree-node__content {
            background-color:deepskyblue;
        }
        .el-tree-node__label {
            font-size: 16px;
        }
        .el-tree-node__content {
            padding-top:3px;
            padding-bottom:3px;
        }
    </style>
</head>
<body>
    <div id="App">
        <div id="DivLeft">
            <el-row class="Table_Button_Row">
                <el-col :span="24">
                    <el-button type="primary" @@click="openAddDialog">新增</el-button>
                    <el-button type="primary" @@click="edit">编辑</el-button>
                    <el-button type="danger" @@click="del">删除</el-button>
                </el-col>
            </el-row>
            <el-row style="margin-top:10px;">
                <el-col :span="24">
                    <el-tree style=""
                             :data="MenuData"
                             :highlight-current="true"
                             :props="DefaultProps"
                             @@node-click="MenuClick">
                        <span class="custom-tree-node" slot-scope="{ node, data }">
                            <i class="el-icon-location"></i>
                            <span>{{ node.label }}</span>
                            <span>
                                {{ node.id }}
                            </span>


                        </span>
                    </el-tree>
                </el-col>
            </el-row>
        </div>
        <div id="DivRight">
            <el-form ref="RootForm" :model="FormData.rootForm" v-if="FormStatus.rootForm" label-width="80px">
                <el-form-item label="Root">

                </el-form-item>
            </el-form>
            <el-form ref="NavForm" :model="FormData.navForm" v-if="FormStatus.navForm" label-width="80px">
                <el-form-item label="Nav">

                </el-form-item>
            </el-form>
            <el-form ref="ActionForm" :model="FormData.actionForm" v-if="FormStatus.actionForm" label-width="80px">
                <el-form-item label="Action">

                </el-form-item>
            </el-form>
        </div>


    </div>
</body>
</html>
<script>
    $vue = new Vue({
        el: "#App",
        data: {
            MenuData: [{
                MenuName: '一级 1',
                id: 1,
                Children: [{
                    MenuName: '二级 1-1',
                    Children: [{
                        MenuName: '三级 1-1-1'
                    }]
                }]
            }, {
                MenuName: '一级 2',
                Children: [{
                    MenuName: '二级 2-1',
                    children: [{
                        MenuName: '三级 2-1-1'
                    }]
                }, {
                    MenuName: '二级 2-2',
                    Children: [{
                        MenuName: '三级 2-2-1'
                    }]
                }]
            }, {
                MenuName: '一级 3',
                Children: [{
                    MenuName: '二级 3-1',
                    Children: [{
                        MenuName: '三级 3-1-1'
                    }]
                }, {
                    MenuName: '二级 3-2',
                    Children: [{
                        MenuName: '三级 3-2-1'
                    }]
                }]
            }],
            DefaultProps: {
                children: 'Children',
                label: 'MenuName'
            },
            SelectedMenu: {},
            FormData: {
                rootForm: {},
                navForm: {},
                actionForm: {}
            },
            FormStatus: {
                rootForm: true,
                navForm: false,
                actionForm: false
            }
            
        },
        methods: {
            MenuClick: function (menu) {
                this.$message(this.SelectedMenu == menu?"true":"false");
                this.SelectedMenu = menu;
                console.log(menu);
            },
            openAddDialog: function() {
                this.FormStatus.rootForm = false;
                this.FormStatus.navForm = true;
                this.FormStatus.actionForm = false;
            },
            edit: function () {
                this.FormStatus.rootForm = false;
                this.FormStatus.navForm = false;
                this.FormStatus.actionForm = true;
            },
            del: function () {
                this.FormStatus.rootForm = true;
                this.FormStatus.navForm = false;
                this.FormStatus.actionForm = false;
            }
        }
        
    });
</script>
